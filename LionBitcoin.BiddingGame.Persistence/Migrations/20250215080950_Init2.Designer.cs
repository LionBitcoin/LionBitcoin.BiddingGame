// <auto-generated />
using System;
using LionBitcoin.BiddingGame.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LionBitcoin.BiddingGame.Persistence.Migrations
{
    [DbContext(typeof(BiddingGameDbContext))]
    [Migration("20250215080950_Init2")]
    partial class Init2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LionBitcoin.BiddingGame.Application.Domain.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("create_timestamp");

                    b.Property<DateTime?>("UpdateTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("update_timestamp");

                    b.HasKey("Id")
                        .HasName("pk_customers");

                    b.ToTable("customers", (string)null);
                });

            modelBuilder.Entity("LionBitcoin.BiddingGame.Application.Domain.Entities.GameSession", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("create_timestamp");

                    b.Property<int>("Currency")
                        .HasColumnType("integer")
                        .HasColumnName("currency");

                    b.Property<int>("PlayersCount")
                        .HasColumnType("integer")
                        .HasColumnName("players_count");

                    b.Property<int>("PlayersLimit")
                        .HasColumnType("integer")
                        .HasColumnName("players_limit");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.Property<decimal>("TicketPrice")
                        .HasColumnType("numeric(20,0)")
                        .HasColumnName("ticket_price");

                    b.Property<DateTime?>("UpdateTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("update_timestamp");

                    b.HasKey("Id")
                        .HasName("pk_game_sessions");

                    b.ToTable("game_sessions", (string)null);
                });

            modelBuilder.Entity("LionBitcoin.BiddingGame.Application.Domain.Entities.GameSessionCustomer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("create_timestamp");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uuid")
                        .HasColumnName("customer_id");

                    b.Property<Guid>("GameSessionId")
                        .HasColumnType("uuid")
                        .HasColumnName("game_session_id");

                    b.Property<DateTime?>("UpdateTimestamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("update_timestamp");

                    b.HasKey("Id")
                        .HasName("pk_game_session_customers");

                    b.HasIndex("CustomerId")
                        .HasDatabaseName("ix_game_session_customers_customer_id");

                    b.HasIndex("GameSessionId")
                        .HasDatabaseName("ix_game_session_customers_game_session_id");

                    b.ToTable("game_session_customers", (string)null);
                });

            modelBuilder.Entity("LionBitcoin.BiddingGame.Application.Domain.Entities.GameSessionCustomer", b =>
                {
                    b.HasOne("LionBitcoin.BiddingGame.Application.Domain.Entities.Customer", null)
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_game_session_customers_customers_customer_id");

                    b.HasOne("LionBitcoin.BiddingGame.Application.Domain.Entities.GameSession", null)
                        .WithMany()
                        .HasForeignKey("GameSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_game_session_customers_game_sessions_game_session_id");
                });
#pragma warning restore 612, 618
        }
    }
}
